{"pageProps":{"content":"The useReducer hook in React is a way to manage the state of a component using a reducer function. A reducer function is a pure function that takes the current state and an action, and returns the next state.\r\n\r\nTo use the useReducer hook, you need to import it from the react library and pass it two arguments: a reducer function and an initial state. The reducer function should take the current state and an action as arguments, and return the next state.\r\n\r\nHere is an example of how to use the useReducer hook to manage the state of a counter component:\r\n\r\n``` js\r\nimport { useReducer } from 'react';\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'increment':\r\n      return { count: state.count + 1 };\r\n    case 'decrement':\r\n      return { count: state.count - 1 };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction Counter() {\r\n  const [state, dispatch] = useReducer(reducer, { count: 0 });\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => dispatch({ type: 'decrement' })}>-</button>\r\n      <span>{state.count}</span>\r\n      <button onClick={() => dispatch({ type: 'increment' })}>+</button>\r\n    </div>\r\n  );\r\n}\r\n\r\n```\r\nIn this example, the useReducer hook is used to manage the state of a counter component. The reducer function takes the current state and an action, and returns the next state based on the action type.\r\n\r\nThe initial state of the counter is passed to the useReducer hook as the second argument. In this case, the initial state is an object with a count property set to 0.\r\n\r\nThe useReducer hook returns an array with two elements: the current state, and a dispatch function. The dispatch function is used to update the state by passing an action to the reducer function.\r\n\r\nIn the example above, the dispatch function is passed to the onClick handlers of the + and - buttons. When the + button is clicked, the dispatch function is called with an action of type increment, which causes the reducer function to increment the count by 1. Similarly, when the - button is clicked, the dispatch function is called with an action of type decrement, which causes the reducer function to decrement the count by 1.\r\n\r\nThe useReducer hook is a powerful way to manage the state of a component, as it allows you to separate the logic for updating the state from the component's render function. It also provides a predictable and consistent way to update the state, which can make debugging and testing easier.\r\n\r\n\r\n\r\n","slug":"4","title":"React Hooks - useReducer()"},"__N_SSG":true}